---
name: "KinD"
on:  # yamllint disable-line rule:truthy
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      artifactid:
        description: 'Artifact id'

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
          config: hack/kind-config.yaml

      - name: Testing on KinD
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Print cluster info
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl wait --for=condition=Ready pods --all -n kube-system
          make install-router

          # Deploy flotta operator
          sed -i 's/LOG_LEVEL=info/LOG_LEVEL=debug/g' config/manager/controller_manager_config.properties
          make build
          IMG=flotta-operator:latest make docker-build
          kind load docker-image flotta-operator:latest
          timeout 2m make deploy IMG=flotta-operator TARGET=k8s || retVal=$?
          if [[ -n "$retVal" && $retVal -ne 124 ]]; then
            echo "Make run failed"; exit 1
          fi
          kubectl wait --timeout=120s --for=condition=Ready pods --all -n flotta

          # Use custom image:
          TEST_SKIP_PULL=false
          if [[ -n "${{ github.event.inputs.artifactid }}" ]]; then
            curl -v -L -o /tmp/edgedevice.zip -H "Authorization: Bearer ${TOKEN}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/project-flotta/flotta-device-worker/actions/artifacts/${{ github.event.inputs.artifactid }}/zip
            pushd /tmp && unzip /tmp/edgedevice.zip && popd
            docker import /tmp/edgedevice customedgedevice
            kind load docker-image customedgedevice
            INPUT_IMAGE=customedgedevice
            TEST_SKIP_PULL=true
          fi

          # Run test
          TEST_SKIP_PULL=$(TEST_SKIP_PULL) TEST_IMAGE="${INPUT_IMAGE:-quay.io/project-flotta/edgedevice:latest}" make integration-test

      # collect logs always just in case the test fails
      - name: Collect all logs
        if: always()
        run: |
          # Just dump the secrets to debug later
          kubectl get secrets -n flotta -o json
          kind export logs dist

      - name: Archive logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: logs
          path: |
            dist
